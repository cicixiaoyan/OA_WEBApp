{"version":3,"sources":["../../src/pages/hr-management/contract/contract-choose/contract-choose.module.ts","../../src/pages/hr-management/contract/contract-choose/contract-choose.ts"],"names":[],"mappings":"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","file":"60.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ContractChoosePage } from './contract-choose';\n\n@NgModule({\n  declarations: [\n    ContractChoosePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ContractChoosePage),\n  ],\n})\nexport class ContractChoosePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/hr-management/contract/contract-choose/contract-choose.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { Response } from \"@angular/http\";\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpService } from '../../../../providers/HttpService';\n\n@IonicPage()\n@Component({\n    selector: 'page-contract-choose',\n    templateUrl: 'contract-choose.html',\n})\nexport class ContractChoosePage {\n\n\n    dept: string;\n    deptItems: any = [];\n    items: any = [];\n    haveAffix: boolean = false;\n    ContactId: string;\n    name: string;\n    Result: Object = {}; // 最终返回结果\n\n    constructor(private navParams: NavParams,\n                public viewCtrl: ViewController,\n                public storage: Storage,\n                public httpService: HttpService) {\n        this.ContactId = this.navParams.get(\"ContactId\");\n        this.initializeItems();\n    }\n\n    initializeItems() {\n        this.httpService.postFormData(\"ashx/BmLs.ashx\", {})\n            .map((res: Response) => res.json())\n            .subscribe((resJson) => {\n                if (resJson.Result) {\n                    this.deptItems = resJson.Data;\n                }\n            });\n        this.search();\n    }\n\n    getItems(ev) {\n        // Reset items back to all of the items\n        this.initializeItems();\n\n        // set val to the value of the ev target\n        let val = ev.target.value;\n        this.name = val;\n        // if the value is an empty string don't filter the items\n        // if (val && val.trim() != '') {\n        //   this.items = this.items.filter((item) => {\n        //     return (item.toLowerCase().indexOf(val.toLowerCase()) > -1);\n        //   });\n        // }\n    }\n\n    getRecipientsByDept(id?) {\n        let data = !!id ? { DeptId: id } : {};\n        this.httpService.postFormData(\"ashx/UserSheet.ashx\", data)\n            .map((res: Response) => res.json())\n            .subscribe((result) => {\n                console.log(result);\n                // if (result.Result){\n                //     const idArr = this.addresseeIds.split(\",\");\n                //\n                //     this.items = result.Data.map(function (value, index) {\n                //         for (let i in idArr) {\n                //             if (idArr[i] !== value.ContactId) {\n                //                 Object.assign(value, { checked: false });\n                //             } else {\n                //                 return Object.assign(value, { checked: true });\n                //\n                //             }\n                //         }\n                //         return value;\n                //\n                //     });\n                // }\n            });\n    }\n\n    search() {\n        console.log('change');\n        let that = this;\n        let data = [\n            {\n                \"ContactId\": '1', // 合同Id\n                \"ContractNumber\": '1', // 合同编号\n                \"ContractName\": '', // 合同名称\n                \"LastValidDate\": '2017-12-12', // 上次生效时间\n                \"LastExpirationDate\": '2017-12-12', // 上次到期时间\n                \"SigningDate\": '12345', // 签约时间\n\n                'StaffId': '1', // 员工Id\n                \"StaffNumber\": '123456', // 员工工号\n                'Name': '张三', // 姓名\n                'Sex': '男', // 性别\n                'IDC': '511324198910121111', // 身份证号\n                'Dept': '部门名称1', // 部门名称\n                'DeptId': '部门名称1', // 部门Id\n                'Duty': '职务1', // 职务\n            },\n            {\n                \"ContactId\": '2', // 合同Id\n                \"ContractNumber\": '1', // 合同编号\n                \"ContractName\": '', // 合同名称\n                \"LastValidDate\": '2017-12-12', // 上次生效时间\n                \"LastExpirationDate\": '2017-12-12', // 上次到期时间\n                \"SigningDate\": '12345', // 签约时间\n\n                'StaffId': '1', // 员工Id\n                \"StaffNumber\": '123456', // 员工工号\n                'Name': '张三', // 姓名\n                'Sex': '男', // 性别\n                'IDC': '511324198910121111', // 身份证号\n                'Dept': '部门名称1', // 部门名称\n                'DeptId': '部门名称1', // 部门Id\n                'Duty': '职务1', // 职务\n            },\n        ];\n        this.items = data.map(function(value, index) {\n            if (value.ContactId == that.ContactId) Object.assign(value, { checked: true });\n            else Object.assign(value, { checked: false });\n            return value;\n        });\n\n        // let data = (this.name !== \"\") ? {name: name} : {};\n        // this.httpService.postFormData(\"ashx/UserSheet.ashx\", data)\n        // .map((res: Response) => res.json())\n        // .subscribe((result) => {\n        //     console.log(result);\n        //     if (result.Result){\n        //         const idArr = this.addresseeIds.split(\",\");\n        //\n        //         this.items = result.Data.map(function (value, index) {\n        //             for (let i in idArr) {\n        //                 if (idArr[i] !== value.Uid) {\n        //                     Object.assign(value, { checked: false });\n        //                 } else {\n        //                     return Object.assign(value, { checked: true });\n        //\n        //                 }\n        //             }\n        //             return value;\n        //\n        //         });\n        //     }\n        // });\n    }\n\n    checkContract(Index: number) { // 单选\n        this.items.forEach((value, index) => {\n            if (Index === index) value.checked = true;\n            else value.checked = false;\n        });\n    }\n\n    confirm() {\n        console.log(confirm);\n\n        for (let value of this.items) {\n            if (value.checked) {\n                this.Result = value;\n            }\n        }\n        this.viewCtrl.dismiss(this.Result);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/hr-management/contract/contract-choose/contract-choose.ts"],"sourceRoot":""}